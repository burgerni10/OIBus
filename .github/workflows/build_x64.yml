name: Build OIBus x64

on:
  release:
    types: [ published ]

jobs:
  build-binaries:
    name: Build for ${{ matrix.config['friendlyName'] }}
    runs-on: ${{ matrix.config['os'] }}
    strategy:
      matrix:
        config:
          - { friendlyName: 'MacOS x64', os: 'macos-latest',   platform: 'macos', archiveName: 'oibus-macos_x64.zip', zip: 'zip -r' }
          - { friendlyName: 'Windows x64', os: 'windows-latest', platform: 'win',   archiveName: 'oibus-win_x64.zip', zip: '7z a -tzip' }
          - { friendlyName: 'Linux x64', os: 'ubuntu-latest',  platform: 'linux', archiveName: 'oibus-linux_x64.zip', zip: 'zip -r' }
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Setup backend environment
        uses: ./.github/actions/setup_backend_environment
        with:
          cache_version: ${{ secrets.GH_ACTIONS_CACHE_KEY }}

      - name: Setup frontend environment
        uses: ./.github/actions/setup_frontend_environment
        with:
          cache_version: ${{ secrets.GH_ACTIONS_CACHE_KEY }}

      - name: Bundle OIBus frontend for ${{ matrix.config['friendlyName'] }}
        working-directory: ./frontend
        run: npm run build

      - name: Build OIBus for ${{ matrix.config['friendlyName'] }}
        working-directory: ./backend
        run: npm run build:${{ matrix.config['platform'] }}

      - name: Test OIBus run for ${{ matrix.config['friendlyName'] }}
        run: |
          cd build/bin/${{ matrix.config['platform'] }}
          ./oibus --config ../../../data-folder --check true

      - name: Package OIBus for ${{ matrix.config['friendlyName'] }}
        run: |
          cd build/bin/${{ matrix.config['platform'] }}
          ${{ matrix.config['zip'] }} ../${{ matrix.config['archiveName'] }} .

      - name: Upload Artifact ${{ matrix.config['archiveName'] }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
        run:
          gh release upload ${{ github.ref_name }} ./build/bin/${{ matrix.config['archiveName'] }}

#
#      - name: Package Windows installer
#        env:
#          PFX_PASSWORD: ${{ secrets.PFX_PASSWORD }}
#          PFX_BASE64_CONTENT: ${{ secrets.PFX_BASE64_CONTENT }}
#          PFX_PATH: C://oibus.pfx
#        if: ${{ matrix.config['platform'] == 'win' }}
#        shell: pwsh
#        working-directory: ./backend
#        run: |
#          $encodedBytes = [System.Convert]::FromBase64String("$env:PFX_BASE64_CONTENT")
#          Set-Content -Path "$env:PFX_PATH" -AsByteStream -Value $encodedBytes
#          npm run build:win-setup
#          Remove-Item -Path "$env:PFX_PATH";
#
#      - name: Rename windows installer
#        if: ${{ matrix.config['platform'] == 'win' }}
#        run: mv ./build/bin/win-setup-release/oibus-setup.exe ./build/bin/win-setup-release/oibus-setup-win_x64.exe
#
#      - name: Upload Windows installer Artifact ${{ matrix.config['archiveName'] }}
#        if: ${{ matrix.config['platform'] == 'win' }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
#        run:
#          gh release upload ${{ inputs.tag_name }} ./build/bin/win-setup-release/oibus-setup-win_x64.exe

